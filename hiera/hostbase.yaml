---
classes:
  - apt
  - cron
  - hostbase::autoupdate
  #  - hostbase::disable_cloud
  - hostbase::dotfiles
  - hostbase::github_userkeys
  - hostbase::puppet
  - hostbase::puppet_cron
  - hostbase::resolved
  - hostbase::sshd
  - hostbase::syslog
  - timezone
  - docker
  - telegraf

hostbase::puppet::version: 7.5.0-1focal

hostbase::packages::base_packages:
  - mailutils
  - vim-nox
  - git
  - python3-virtualenv
  - python3-pip
  - hwinfo

github_userkeys:
  "marco": gentoomaniac
  "root": gentoomaniac

timezone::timezone: Etc/UTC

dns::servers:
  - 10.1.1.52
  - 10.1.1.53

apt::sources:
  "puppet6":
    location: http://apt.puppetlabs.com
    release: "%{facts.os.distro.codename}"
    repos: puppet6
    key:
      id: "6F6B15509CF8E59E6E469F327F438280EF8D349F"
      server: keyserver.ubuntu.com

ressources:
  group:
    "ubuntu":
      ensure: absent
      before: Group[marco]
      require: User[ubuntu]
    "marco":
      ensure: present
      gid: 1000
      before: User[marco]
  user:
    "ubuntu":
      ensure: absent
      before: User[marco]
    "marco":
      ensure: present
      uid: 1000
      gid: marco
      home: /home/marco
      shell: /bin/bash
      managehome: true
      password: $6$OyX.KXb2$G8HSC0zSuuSpywQkq.8mZ0JSnt84MNdwrt.AqLiEmyxh7I4R9Ni/N1P8yq/lDVZF9ysFxAkB4gQP7Qm93A9TL0
      groups:
        - sudo
        - adm
      purge_ssh_keys: true
  file:
    "/srv":
      ensure: directory
    "/usr/local/bin/mvault":
      ensure: present
      mode: "0754"
      content: |
        #!/usr/bin/env bash

        VAULT_BIN=$(which vault)
        export VAULT_ADDR=https://vault.srv.gentoomaniac.net/

        # renew vault token:
        if [ -n "${VAULT_BIN}" ]; then
            VAULT_TOKEN=$(vault write -field=token auth/approle/login role_id="$(cat /etc/vault_role_id)" secret_id="$(cat /etc/vault_secret_id)")
            export VAULT_TOKEN
        else
            echo "Vault binary not found"
            exit 1
        fi

        ${VAULT_BIN} "$@"
    "/usr/local/bin/regular-reboot":
      ensure: present
      mode: "0754"
      content: |
        #!/usr/bin/env bash
        if [ ! -f /etc/no_reboot ];
          sleep $((RANDOM%60*60))
          sudo reboot
        fi

cron::job:
  "regular-reboot":
    command: "/usr/local/bin/regular-reboot"
    user: "root"
    minute: "0"
    hour: "2"
    weekday: "*/7"
    require: File[/usr/local/bin/regular-reboot]

docker::docker_users:
  - marco
  - telegraf

telegraf::hostname: "%{::fqdn}"
telegraf::global_tags:
  role: "%{::role}"
  domain: "%{::domain}"
telegraf::inputs:
  cpu:
    - percpu: true
      totalcpu: true
  exec:
    - commands:
        - who | wc -l
    - commands:
        - awk '{print $1}' /proc/uptime
  mem: [{}]
  processes: [{}]
  io: [{}]
  net:
    interfaces:
      - "eth*"
      - "ens*"
      - "enp*"
  disk:
    - mount_points: ["/", "/boot"]
    - ignore_fs: ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs", "nfs"]
  swap: [{}]
  system: [{}]
  kernel: [{}]
  conntrack: [{}]
  ethtool:
    interface_include:
      - "eth*"
      - "ens*"
      - "enp*"
  interrupts: [{}]
  internal: [{}]
  iptables: [{}]
  kernel_vmstat: [{}]
  temp: [{}]
  docker:
    - endpoint: unix:///var/run/docker.sock
telegraf::outputs:
  influxdb:
    - urls:
        - "https://influxdb.srv.gentoomaniac.net:8086"
      database: 'telegraf'
      username: "%{lookup('secret_telegraf_user')}"
      password: "%{lookup('secret_telegraf_password')}"

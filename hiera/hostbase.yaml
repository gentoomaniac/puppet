---
classes:
  - apt
  - cron
  - hostbase::autoupdate
  #  - hostbase::disable_cloud
  - hostbase::dotfiles
  #  - hostbase::github_userkeys
  - hostbase::puppet
  - hostbase::puppet_cron
  - hostbase::resolved
  - hostbase::sshd
  - hostbase::syslog
  - timezone
  - docker
  - telegraf

hostbase::puppet::version: 7.5.0-1focal

hostbase::packages::base_packages:
  - mailutils
  - vim-nox
  - git
  - python3-virtualenv
  - python3-pip
  - hwinfo

github_userkeys:
  "marco": gentoomaniac
  "root": gentoomaniac

timezone::timezone: Etc/UTC

dns::servers:
  - 10.1.1.52
  - 10.1.1.53

apt::sources:

ressources:
  group:
    "ubuntu":
      ensure: absent
      before: Group[marco]
      require: User[ubuntu]
    "marco":
      ensure: present
      gid: 1000
      before: User[marco]
  user:
    "ubuntu":
      ensure: absent
      before: User[marco]
    "marco":
      ensure: present
      uid: 1000
      gid: marco
      home: /home/marco
      shell: /bin/bash
      managehome: true
      password: $6$OyX.KXb2$G8HSC0zSuuSpywQkq.8mZ0JSnt84MNdwrt.AqLiEmyxh7I4R9Ni/N1P8yq/lDVZF9ysFxAkB4gQP7Qm93A9TL0
      groups:
        - sudo
        - adm
      purge_ssh_keys: true
  file:
    /etc/userkeys/marco/authorized_keys:
      ensure: present
      mode: "0644"
      content: |
        ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDVF2/g5C/6rLt9S24Q5Mwb4g2uheXWOOv3rvZ6doKdW+ZDLR/XpBYBPFB8kMEBtwNo56I4PpqClaiR1sv98LiVU08FUJjyL5getlz2/JMHShOfoXRlpu5BToReTcewXSfIIq0Siid0DcE/XKtoDuyIwJb8bY8FNwpdUlpvEnkkjqxlbREaMJ9QYCsmp9BhYUeVP5vcZayiuloZZ05qWYYrgfTDQDNOL9QsMgZKYUezlAsSi0/39q4UB1PkKqpbT22hND4PlTonschUs1JmTq5yAkdf78RGSZ2hzt1gTvEq9kgkAA+XUUv6kIzUm8biEr5DCI/zyltqMiN25I+3iNawEShJXVEDLrJquPEcMdLllzvs7UFkaHy+wIcci9L56HPekmQx1qOe8Reqoy5EVSxBYQhW+2R4X5YLF9zJVfD0wsbV2z1NV9eUDRWKe1h+bOiFc+RZ38MR8V6/AdTiEgnGE8ooXsvaLDVh7WtgKQEm19VkMNT2J8Rbh/CerGTrrqDqL3jH7uewrGaE17qEL+PtEQsO+BYgaW5NRHE6XbYoVcfjCSvZZn9hnt9/itkgbdtbT8AyFduBBhBA6fY+pBSf5SZmVKpJPoaG/w2TeCfRxoIKc2X8VZfsHHXnkJ0JRKIwVi208ctW+k0fHWpdaYdMKIQQJi1jc/1YzzOHWOFDHQ==
    /etc/userkeys/root/authorized_keys:
      ensure: present
      mode: "0644"
      content: |
        ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDVF2/g5C/6rLt9S24Q5Mwb4g2uheXWOOv3rvZ6doKdW+ZDLR/XpBYBPFB8kMEBtwNo56I4PpqClaiR1sv98LiVU08FUJjyL5getlz2/JMHShOfoXRlpu5BToReTcewXSfIIq0Siid0DcE/XKtoDuyIwJb8bY8FNwpdUlpvEnkkjqxlbREaMJ9QYCsmp9BhYUeVP5vcZayiuloZZ05qWYYrgfTDQDNOL9QsMgZKYUezlAsSi0/39q4UB1PkKqpbT22hND4PlTonschUs1JmTq5yAkdf78RGSZ2hzt1gTvEq9kgkAA+XUUv6kIzUm8biEr5DCI/zyltqMiN25I+3iNawEShJXVEDLrJquPEcMdLllzvs7UFkaHy+wIcci9L56HPekmQx1qOe8Reqoy5EVSxBYQhW+2R4X5YLF9zJVfD0wsbV2z1NV9eUDRWKe1h+bOiFc+RZ38MR8V6/AdTiEgnGE8ooXsvaLDVh7WtgKQEm19VkMNT2J8Rbh/CerGTrrqDqL3jH7uewrGaE17qEL+PtEQsO+BYgaW5NRHE6XbYoVcfjCSvZZn9hnt9/itkgbdtbT8AyFduBBhBA6fY+pBSf5SZmVKpJPoaG/w2TeCfRxoIKc2X8VZfsHHXnkJ0JRKIwVi208ctW+k0fHWpdaYdMKIQQJi1jc/1YzzOHWOFDHQ==
    "/etc/netplan/00-installer-config.yaml":
      ensure: absent
    "/etc/netplan/99-installer-config.yaml":
      ensure: absent
    "/srv":
      ensure: directory
    "/usr/local/bin/mvault":
      ensure: present
      mode: "0754"
      content: |
        #!/usr/bin/env bash

        VAULT_BIN=$(which vault)
        export VAULT_ADDR=https://vault.srv.gentoomaniac.net/

        # renew vault token:
        if [ -n "${VAULT_BIN}" ]; then
            VAULT_TOKEN=$(vault write -field=token auth/approle/login role_id="$(cat /etc/vault_role_id)" secret_id="$(cat /etc/vault_secret_id)")
            export VAULT_TOKEN
        else
            echo "Vault binary not found"
            exit 1
        fi

        ${VAULT_BIN} "$@"
    "/usr/local/bin/custom-metrics":
        ensure: present
        mode: "0755"
        content: |
          #!/usr/bin/env bash

          echo $(lsb_release -d | sed "s/^Description:\s\+//; s/ /\\\ /g; s/\(.*\)/lsb_release,hostname=$(hostname),release=\1 value=1/")

    "/etc/cron.weekly/regular-reboot":
      ensure: absent
    "/usr/local/bin/unattended-reboot":
      ensure: present
      mode: "0754"
      content: |
        #!/usr/bin/env bash
        if [ ! -f /etc/no_reboot ]; then
          sleep $((RANDOM%60*60))
          reboot
        fi
    "/etc/systemd/system/unattended-reboot-weekly.timer":
      content: |
        [Unit]
        Description=Run unattended-reboot weekly

        [Timer]
        OnCalendar=weekly
        Persistent=true
        Unit=unattended-reboot.service

        [Install]
        WantedBy=timers.target
      require:
        - File[/etc/systemd/system/unattended-reboot.service]
    "/etc/systemd/system/unattended-reboot.service":
      ensure: present
      mode: "0644"
      content: |
        [Unit]
        Description=reboot system after a random delay

        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/unattended-reboot
        User=root
        Group=systemd-journal
      require:
        - File[/usr/local/bin/unattended-reboot]

    "/etc/cron.weekly/docker-system-prune":
      ensure: absent
    "/usr/local/bin/docker-system-prune":
      ensure: present
      mode: "0750"
      content: |
        #!/usr/bin/env bash
        if [ ! -f /etc/no_prune ]; then
          sleep $((RANDOM%60*60))
          yes | docker system prune --volumes
        fi
    "/etc/systemd/system/docker-system-prune-weekly.timer":
      content: |
        [Unit]
        Description=Run docker-system-prune weekly

        [Timer]
        OnCalendar=weekly
        Persistent=true
        Unit=docker-system-prune.service

        [Install]
        WantedBy=timers.target
      require:
        - File[/etc/systemd/system/docker-system-prune.service]
    "/etc/systemd/system/docker-system-prune.service":
      ensure: present
      mode: "0644"
      content: |
        [Unit]
        Description=docker system prune after a random delay

        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/docker-system-prune
        User=root
        Group=systemd-journal
      require:
        - File[/usr/local/bin/docker-system-prune]

  service:
    "unattended-reboot-weekly.timer":
      status: started
      enable: true
    "docker-system-prune-weekly.timer":
      status: started
      enable: true

docker::docker_users:
  - marco
  - telegraf

telegraf::hostname: "%{::fqdn}"
telegraf::global_tags:
  role: "%{::role}"
  domain: "%{::domain}"
telegraf::inputs:
  cpu:
    - percpu: true
      totalcpu: true
  exec:
    - commands:
        - /usr/local/bin/custom-metrics
      timeout: 5s
      data_format: influx
  mem: [{}]
  processes: [{}]
  io: [{}]
  net:
    interfaces:
      - "eth*"
      - "ens*"
      - "enp*"
  disk:
    - mount_points: ["/", "/boot"]
    - ignore_fs: ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs", "nfs"]
  swap: [{}]
  system: [{}]
  kernel: [{}]
  conntrack: [{}]
  ethtool:
    interface_include:
      - "eth*"
      - "ens*"
      - "enp*"
  interrupts: [{}]
  internal: [{}]
  iptables: [{}]
  kernel_vmstat: [{}]
  temp: [{}]
  docker:
    - endpoint: unix:///var/run/docker.sock
telegraf::outputs:
  influxdb:
    - urls:
        - "https://influxdb.srv.gentoomaniac.net:8086"
      database: 'telegraf'
      username: "%{lookup('secret_telegraf_user')}"
      password: "%{lookup('secret_telegraf_password')}"

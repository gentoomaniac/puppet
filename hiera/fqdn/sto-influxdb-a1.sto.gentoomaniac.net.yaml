---
classes:
  - docker::networks
  - docker::run_instance

ressources:
  file:
    "/srv/traefik":
      ensure: directory
      require: File[/srv]
    "/srv/traefik/conf":
      ensure: directory
      require: File[/srv/traefik]
    "/srv/traefik/ssl":
      ensure: directory
      require: File[/srv/traefik]
    "/srv/traefik/ssl/key.pem":
      ensure: present
      content: "%{lookup('secret_srv_gentoomaniac_net_key')}"
      require: File[/srv/traefik/ssl]
    "/srv/traefik/ssl/cert.pem":
      ensure: present
      content: "%{lookup('secret_srv_gentoomaniac_net_cert')}"
      require: File[/srv/traefik/ssl]
    "/srv/traefik/conf/certs.toml":
      ensure: present
      content: |
        [tls.stores]
          [tls.stores.default]
          [tls.stores.default.defaultCertificate]
            certFile = "/ssl/cert.pem"
            keyFile = "/ssl/key.pem"
      require:
        - File[/srv/traefik/ssl/cert.pem]
        - File[/srv/traefik/ssl/key.pem]
    "/srv/influxdb":
      ensure: directory
      require: File[/srv]
    "/srv/influxdb/conf":
      ensure: directory
      require: File[/srv/influxdb]
    "/srv/influxdb/conf/influxdb.conf":
      ensure: file
      require: File[/srv/influxdb/conf]
      content: |
        [meta]
          dir = "/var/lib/influxdb/meta"
          retention-autocreate = true
          logging-enabled = true

        [data]
          dir = "/var/lib/influxdb/data"
          index-version = "inmem"
          wal-dir = "/var/lib/influxdb/wal"
          wal-fsync-delay = "0s"
          validate-keys = false
          query-log-enabled = true
          cache-max-memory-size = 1073741824
          cache-snapshot-memory-size = 26214400
          cache-snapshot-write-cold-duration = "10m0s"
          compact-full-write-cold-duration = "4h0m0s"
          compact-throughput = 50331648
          compact-throughput-burst = 50331648
          max-series-per-database = 1000000
          max-values-per-tag = 100000
          max-concurrent-compactions = 0
          max-index-log-file-size = 1048576
          series-id-set-cache-size = 100
          trace-logging-enabled = false
          tsm-use-madv-willneed = false

        [coordinator]
          write-timeout = "10s"
          max-concurrent-queries = 0
          query-timeout = "0s"
          log-queries-after = "0s"
          max-select-point = 0
          max-select-series = 0
          max-select-buckets = 0

        [retention]
          enabled = true
          check-interval = "30m0s"

        [shard-precreation]
          enabled = true
          check-interval = "10m0s"
          advance-period = "30m0s"

        [monitor]
          store-enabled = true
          store-database = "_internal"
          store-interval = "10s"

        [subscriber]
          enabled = true
          http-timeout = "30s"
          insecure-skip-verify = false
          ca-certs = ""
          write-concurrency = 40
          write-buffer-size = 1000

        [http]
          enabled = true
          bind-address = ":8086"
          auth-enabled = false
          log-enabled = true
          suppress-write-log = false
          write-tracing = false
          flux-enabled = false
          flux-log-enabled = false
          pprof-enabled = true
          pprof-auth-enabled = false
          debug-pprof-enabled = false
          ping-auth-enabled = false
          https-enabled = false
          https-certificate = "/etc/ssl/influxdb.pem"
          https-private-key = ""
          max-row-limit = 0
          max-connection-limit = 0
          shared-secret = ""
          realm = "InfluxDB"
          unix-socket-enabled = false
          unix-socket-permissions = "0777"
          bind-socket = "/var/run/influxdb.sock"
          max-body-size = 25000000
          access-log-path = ""
          max-concurrent-write-limit = 0
          max-enqueued-write-limit = 0
          enqueued-write-timeout = 30000000000

        [logging]
          format = "auto"
          level = "info"
          suppress-logo = false

        [[graphite]]
          enabled = true
          bind-address = ":2003"
          database = "truenas"
          protocol = "tcp"
          consistency-level = "one"

          templates = [
            "servers.*.cpu.*.percent.* .host.measurement.core.*.usage",
            "servers.*.aggregation.cpu-average.percent.* .host.*.measurement.*.usage",
            "servers.*.load.load.* .host.*.measurement.type",
            "servers.*.cputemp.*.temperature .host.measurement.core.*",
            "servers.*.disktemp.*.temperature .host.measurement.disk.*",
            "servers.*.memory.* .host.measurement.*.type",
            "servers.*.swap.* .host.measurement.*.type",
            "servers.*.uptime.* .host.measurement.*",
            "servers.*.interface.*.*.* .host.*.interface.measurement.flow",
            "servers.*.processes.ps_state.* .host.measurement.*.state",
            "servers.*.df.*.df_complex.* .host.measurement.fs.*.type",

            # Default
            ".host.measurement*"
          ]

    "/srv/chronograf":
      ensure: directory
      require: File[/srv]
    "/srv/varken":
      ensure: directory
      require: File[/srv]

docker::networks::networks:
  web:
    ensure: "present"

docker::run_instance::instance:
  influxdb:
    image: influxdb:1.7-alpine
    dns:
      - 10.1.1.52
      - 10.1.1.53
    env:
      - INFLUXDB_ADMIN_USER='%{lookup('secret_influxdb_admin_user')}'
      - INFLUXDB_ADMIN_PASSWORD='%{lookup('secret_influxdb_admin_password')}'
      - INFLUXDB_USER='%{lookup('secret_influxdb_user')}'
      - INFLUXDB_USER_PASSWORD='%{lookup('secret_influxdb_user_password')}'
    expose:
      - 8086/tcp
    ports:
      - 2003:2003/tcp
    extra_parameters:
      - --restart=unless-stopped
    labels:
      - "'traefik.enable=true'"
      - "'traefik.http.services.influxdb.loadbalancer.server.port=8086'"
      - "'traefik.http.routers.influxdb.rule=Host(`influxdb.srv.gentoomaniac.net`)'"
      - "'traefik.http.routers.influxdb.entrypoints=influxdb'"
      - "'traefik.http.routers.influxdb.tls=true'"
      - "'traefik.http.middlewares.influxdb-whitelist.ipwhitelist.sourcerange=10.1.1.0/24,10.1.15.0/24,172.17.0.0/24'"
      - "'traefik.http.routers.influxdb.middlewares=influxdb-whitelist'"
    pull_on_start: true
    volumes:
      - /srv/influxdb/data:/var/lib/influxdb
      - /srv/influxdb/conf/influxdb.conf:/etc/influxdb/influxdb.conf:ro
    require:
      - Class[docker]
      - File[/srv/influxdb]
  chronograf:
    image: chronograf:1.7-alpine
    dns:
      - 10.1.1.52
      - 10.1.1.53
    expose:
      - 8888/tcp
    extra_parameters:
      - --restart=unless-stopped
    labels:
      - "'traefik.enable=true'"
      - "'traefik.http.routers.chronograf.rule=Host(`chronograf.srv.gentoomaniac.net`)'"
      - "'traefik.http.routers.chronograf.entrypoints=ssl'"
      - "'traefik.http.routers.chronograf.tls=true'"
      - "'traefik.http.middlewares.chronograf-whitelist.ipwhitelist.sourcerange=10.1.1.0/24,10.1.15.0/24,172.17.0.0/24'"
      - "'traefik.http.routers.chronograf.middlewares=chronograf-whitelist'"
    pull_on_start: true
    volumes:
      - /srv/chronograf:/var/lib/chronograf
    require:
      - Class[docker]
      - File[/srv/chronograf]
  traefik:
    image: traefik:v2.2
    command: >
      --api.insecure=true
      --entrypoints.influxdb.address=:8086
      --entrypoints.ssl.address=:443
      --serverstransport.insecureskipverify=true
      --providers.docker
      --providers.docker.exposedbydefault=false
      --providers.file.directory=/conf
      --providers.file.watch=true
    dns:
      - 10.1.1.52
      - 10.1.1.53
    env:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    extra_parameters:
      - --restart=unless-stopped
    net:
      - web
    ports:
      - 8086:8086/tcp
      - 8080:8080/tcp
      - 443:443/tcp
    pull_on_start: true
    require:
      - Class[docker]
      - Docker_network[web]
      - File[/srv/traefik/conf/certs.toml]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /srv/traefik/ssl:/ssl:ro
      - /srv/traefik/conf:/conf:ro
  varken:
    image: boerderij/varken:latest
    dns:
      - 10.1.1.52
      - 10.1.1.53
    env:
      - TZ=Europe/Berlin
      - VRKN_GLOBAL_SONARR_SERVER_IDS=1
      - VRKN_GLOBAL_RADARR_SERVER_IDS=1
      - VRKN_GLOBAL_LIDARR_SERVER_IDS=false
      - VRKN_GLOBAL_TAUTULLI_SERVER_IDS=1
      - VRKN_GLOBAL_OMBI_SERVER_IDS=false
      - VRKN_GLOBAL_SICKCHILL_SERVER_IDS=false
      - VRKN_GLOBAL_UNIFI_SERVER_IDS=1
      - VRKN_GLOBAL_MAXMIND_LICENSE_KEY=%{lookup('secret_maxmind_key')}
      - VRKN_INFLUXDB_URL=influxdb.srv.gentoomaniac.net
      - VRKN_INFLUXDB_PORT=8086
      - VRKN_INFLUXDB_SSL=true
      - VRKN_INFLUXDB_VERIFY_SSL=true
      - VRKN_INFLUXDB_USERNAME=%{lookup('secret_influxdb_varken_user')}
      - VRKN_INFLUXDB_PASSWORD=%{lookup('secret_influxdb_varken_password')}
      - VRKN_UNIFI_1_URL=unifi.srv.gentoomaniac.net:443
      - VRKN_UNIFI_1_USERNAME=%{lookup('secret_unifi_user')}
      - VRKN_UNIFI_1_PASSWORD=%{lookup('secret_unifi_password')}
      - VRKN_UNIFI_1_SITE=Home
      - VRKN_UNIFI_1_USG_NAME=USG
      - VRKN_UNIFI_1_SSL=true
      - VRKN_UNIFI_1_VERIFY_SSL=true
      - VRKN_UNIFI_1_GET_USG_STATS_RUN_SECONDS=300
      - VRKN_SONARR_1_URL=sonarr.srv.gentoomaniac.net
      - VRKN_SONARR_1_APIKEY=%{lookup('secret_sonarr_api_key')}
      - VRKN_SONARR_1_SSL=true
      - VRKN_SONARR_1_VERIFY_SSL=true
      - VRKN_SONARR_1_MISSING_DAYS=7
      - VRKN_SONARR_1_MISSING_DAYS_RUN_SECONDS=300
      - VRKN_SONARR_1_FUTURE_DAYS=1
      - VRKN_SONARR_1_FUTURE_DAYS_RUN_SECONDS=300
      - VRKN_SONARR_1_QUEUE=true
      - VRKN_SONARR_1_QUEUE_RUN_SECONDS=300
      - VRKN_RADARR_1_URL=radarr.srv.gentoomaniac.net
      - VRKN_RADARR_1_APIKEY=%{lookup('secret_radarr_api_key')}
      - VRKN_RADARR_1_SSL=true
      - VRKN_RADARR_1_VERIFY_SSL=true
      - VRKN_RADARR_1_QUEUE=true
      - VRKN_RADARR_1_QUEUE_RUN_SECONDS=300
      - VRKN_RADARR_1_GET_MISSING=true
      - VRKN_RADARR_1_GET_MISSING_RUN_SECONDS=300
      - VRKN_TAUTULLI_1_URL=tautulli.srv.gentoomaniac.net
      - VRKN_TAUTULLI_1_APIKEY=%{lookup('secret_tautulli_api_key')}
      - VRKN_TAUTULLI_1_SSL=true
      - VRKN_TAUTULLI_1_VERIFY_SSL=true
      - VRKN_TAUTULLI_1_GET_ACTIVITY=true
      - VRKN_TAUTULLI_1_GET_ACTIVITY_RUN_SECONDS=30
      - VRKN_TAUTULLI_1_GET_STATS=true
      - VRKN_TAUTULLI_1_GET_STATS_RUN_SECONDS=3600
    extra_parameters:
      - --restart=unless-stopped
    labels:
      - "'traefik.enable=false'"
    pull_on_start: true
    volumes:
      - /srv/varken:/config
    require:
      - Class[docker]
      - File[/srv/varken]

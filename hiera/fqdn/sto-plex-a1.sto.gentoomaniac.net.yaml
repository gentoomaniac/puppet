---
classes:
  - docker::networks
  - docker::volumes
  - docker::run_instance
  - kickstart_nginx
  - ioquake3

traefik::ports:
  - 9200:9200/tcp

ressources:
  package:
    autofs:
      ensure: installed
  sysctl:
    vm.max_map_count:
      value: 262144
  file:
    "/srv/traefik":
      ensure: directory
      require: File[/srv]
    "/srv/traefik/conf":
      ensure: directory
      require: File[/srv/traefik]
    "/srv/traefik/ssl":
      ensure: directory
      require: File[/srv/traefik]
    "/srv/traefik/ssl/key.pem":
      ensure: present
      content: "%{lookup('secret_srv_gentoomaniac_net_key')}"
      require: File[/srv/traefik/ssl]
      notify: Docker::Run[traefik]
    "/srv/traefik/ssl/cert.pem":
      ensure: present
      content: "%{lookup('secret_srv_gentoomaniac_net_cert')}"
      require: File[/srv/traefik/ssl]
      notify: Docker::Run[traefik]
    "/srv/traefik/conf/certs.toml":
      ensure: present
      content: |
        [tls.stores]
          [tls.stores.default]
          [tls.stores.default.defaultCertificate]
            certFile = "/ssl/cert.pem"
            keyFile = "/ssl/key.pem"
    "/srv/traefik/conf/static.toml":
      ensure: present
      content: |
        [http.services]
          [http.services.dummy.loadBalancer]
            [[http.services.dummy.loadBalancer.servers]]
                url = ""

          [http.services.freenas.loadBalancer]
            [[http.services.freenas.loadBalancer.servers]]
              url = "https://10.1.1.5:443/"

          [http.services.unifi.loadBalancer]
            [[http.services.unifi.loadBalancer.servers]]
              url = "https://10.1.1.2:8443/"

          [http.services.protect.loadBalancer]
            [[http.services.protect.loadBalancer.servers]]
              url = "https://10.1.1.2:7443/"

          [http.services.ck.loadBalancer]
            [[http.services.ck.loadBalancer.servers]]
              url = "https://10.1.1.2:443/"

          [http.services.proxmox1.loadBalancer]
            [[http.services.proxmox1.loadBalancer.servers]]
              url = "https://sto-proxmox-a1.sto.gentoomaniac.net:8006/"

          [http.services.proxmox2.loadBalancer]
            [[http.services.proxmox2.loadBalancer.servers]]
              url = "https://sto-proxmox-a2.sto.gentoomaniac.net:8006/"

        [http.routers]
          [http.routers.redirect-to-https]
            rule = "hostregexp(`{host:.+}`)"
            service = "dummy"
            entryPoints = ["web"]
            middlewares = ["redirect-to-https"]

          [http.routers.freenas]
            rule = "Host(`nas.srv.gentoomaniac.net`)"
            service = "freenas"
            entryPoints = ["websecure"]
            middlewares = ["local-only-whitelist"]
            [http.routers.freenas.tls]

          [http.routers.unifi]
            rule = "Host(`unifi.srv.gentoomaniac.net`)"
            service = "unifi"
            entryPoints = ["websecure"]
            middlewares = ["local-only-whitelist"]
            [http.routers.unifi.tls]

          [http.routers.protect]
            rule = "Host(`protect.srv.gentoomaniac.net`)"
            service = "protect"
            entryPoints = ["websecure"]
            middlewares = ["local-only-whitelist"]
            [http.routers.protect.tls]

          [http.routers.ck]
            rule = "Host(`ck.srv.gentoomaniac.net`)"
            service = "ck"
            entryPoints = ["websecure"]
            middlewares = ["local-only-whitelist"]
            [http.routers.ck.tls]

          [http.routers.proxmox1]
            rule = "Host(`proxmox1.srv.gentoomaniac.net`)"
            service = "proxmox1"
            entryPoints = ["websecure"]
            middlewares = ["local-only-whitelist"]
            [http.routers.proxmox1.tls]

          [http.routers.proxmox2]
            rule = "Host(`proxmox2.srv.gentoomaniac.net`)"
            service = "proxmox2"
            entryPoints = ["websecure"]
            middlewares = ["local-only-whitelist"]
            [http.routers.proxmox2.tls]

        [http.middlewares]
          [http.middlewares.redirect-to-https]
            [http.middlewares.redirect-to-https.redirectscheme]
              scheme = "https"

          [http.middlewares.local-only-whitelist]
            [http.middlewares.local-only-whitelist.ipwhitelist]
              sourcerange = ["10.1.1.0/24","10.1.15.0/24"]

    /srv/grafana:
      owner: 1000
      group: 1000
      ensure: directory
    /srv/portainer:
      ensure: directory
      require: File[/srv]
    /srv/quassel-core:
      ensure: directory
      require: File[/srv]
    /srv/radarr:
      ensure: directory
      require: File[/srv]
    /srv/radarr-kids:
      ensure: directory
      require: File[/srv]
    /srv/registry:
      ensure: directory
      require: File[/srv]
    /srv/sonarr:
      ensure: directory
      require: File[/srv]
    /srv/tautulli:
      ensure: directory
      require: File[/srv]
    /etc/auto.nfs:
      ensure: present
      content: |
        movies  -soft,intr,rsize=8192,wsize=8192,noatime,uid=marco,gid=marco 10.1.1.5:/mnt/movies/movies
        kids_movies  -soft,intr,rsize=8192,wsize=8192,noatime,uid=marco,gid=marco 10.1.1.5:/mnt/tank0/kids_movies
        shows  -soft,intr,rsize=8192,wsize=8192,noatime,uid=marco,gid=marco 10.1.1.5:/mnt/tank3/shows
        kids_shows  -soft,intr,rsize=8192,wsize=8192,noatime,uid=marco,gid=marco 10.1.1.5:/mnt/tank0/kids_shows
        kids_shows_se  -soft,intr,rsize=8192,wsize=8192,noatime,uid=marco,gid=marco 10.1.1.5:/mnt/tank0/kids_shows_se
        sd_old  -soft,intr,rsize=8192,wsize=8192,noatime,uid=marco,gid=marco 10.1.1.5:/mnt/tank3/sd_old

        docker  -rw,soft,intr,rsize=8192,wsize=8192,noatime 10.1.1.5:/mnt/bak/docker
        share  -rw,soft,intr,rsize=8192,wsize=8192,noatime 10.1.1.5:/mnt/tank5/share
        nzbget  -rw,soft,intr,rsize=8192,wsize=8192,noatime 10.1.1.5:/mnt/tmp/nzbget
        tftpboot  -rw,soft,intr,rsize=8192,wsize=8192,noatime 10.1.1.5:/mnt/tank1/tftpboot

    /etc/auto.master.d/nfs.autofs:
      ensure: present
      content: |
        /nfs   /etc/auto.nfs --timeout 60

      require:
        - File[/etc/auto.nfs]
        - Package[autofs]
    /srv/plex:
      ensure: directory
    /srv/plex/config:
      ensure: directory
      require: File[/srv/plex]
    /srv/plex/transcode:
      ensure: directory
      require: File[/srv/plex]
  service:
    autofs:
      ensure: running
      enable: true
      require:
        - File[/etc/auto.nfs]
        - File[/etc/auto.master.d/nfs.autofs]
    avahi-daemon:
      ensure: stopped
      enable: false

docker::networks::networks:
  web:
    ensure: "present"

docker::volumes::volumes:
  nfs_movies:
    ensure: present
    driver: local
    options:
      - - type=nfs
        - o=addr=10.1.1.5,nolock,soft,bg,tcp,intr,rsize=8192,wsize=8192,noatime,rw
        - device=:/mnt/movies/movies
  nfs_kids_movies:
    ensure: present
    driver: local
    options:
      - - type=nfs
        - o=addr=10.1.1.5,nolock,soft,bg,tcp,intr,rsize=8192,wsize=8192,noatime,rw
        - device=:/mnt/tank0/kids_movies
  nfs_shows:
    ensure: present
    driver: local
    options:
      - - type=nfs
        - o=addr=10.1.1.5,nolock,soft,bg,tcp,intr,rsize=8192,wsize=8192,noatime,rw
        - device=:/mnt/tank3/shows
  nfs_kids_shows:
    ensure: present
    driver: local
    options:
      - - type=nfs
        - o=addr=10.1.1.5,nolock,soft,bg,tcp,intr,rsize=8192,wsize=8192,noatime,rw
        - device=:/mnt/tank0/kids_shows
  nfs_kids_shows_se:
    ensure: present
    driver: local
    options:
      - - type=nfs
        - o=addr=10.1.1.5,nolock,soft,bg,tcp,intr,rsize=8192,wsize=8192,noatime,rw
        - device=:/mnt/tank0/kids_shows_se
  nfs_sd_old:
    ensure: present
    driver: local
    options:
      - - type=nfs
        - o=addr=10.1.1.5,nolock,soft,bg,tcp,intr,rsize=8192,wsize=8192,noatime,rw
        - device=:/mnt/tank3/sd_old

docker::run_instance::instance:
  traefik:
    image: traefik:v2.2
    command: >
      --api.insecure=true
      --entrypoints.web.address=:80
      --entrypoints.websecure.address=:443
      --entrypoints.elasticsearch.address=:9200
      --providers.file.directory=/conf
      --providers.file.watch=true
      --providers.docker
      --providers.docker.exposedbydefault=false
      --serverstransport.insecureskipverify=true
    dns:
      - 10.1.1.52
      - 10.1.1.53
    env:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    extra_parameters:
      - --restart=unless-stopped
    net:
      - web
    ports:
      - 80:80/tcp
      - 443:443/tcp
      - 8080:8080/tcp
      - 9200:9200/tcp
    pull_on_start: true
    require:
      - Class[docker]
      - Docker_network[web]
      - File[/srv/traefik/conf/certs.toml]
      - File[/srv/traefik/conf/static.toml]
      - File[/srv/traefik/ssl/cert.pem]
      - File[/srv/traefik/ssl/key.pem]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /srv/traefik/ssl:/ssl:ro
      - /srv/traefik/conf:/conf:ro
  grafana:
    image: grafana/grafana:latest
    dns:
      - 10.1.1.52
      - 10.1.1.53
    env:
      - GF_SERVER_ROOT_URL=https://grafana.srv.gentoomaniac.net
      # - GF_SECURITY_ADMIN_PASSWORD=
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel,vonage-status-panel
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    expose:
      - 3000/tcp
    extra_parameters:
      - --restart=unless-stopped
    labels:
      - "'traefik.enable=true'"
      - "'traefik.http.routers.grafana.rule=Host(`grafana.srv.gentoomaniac.net`)'"
      - "'traefik.http.routers.grafana.entrypoints=websecure'"
      - "'traefik.http.routers.grafana.tls=true'"
      - "'traefik.http.middlewares.grafana-whitelist.ipwhitelist.sourcerange=10.1.1.0/24,10.1.15.0/24'"
      - "'traefik.http.routers.grafana.middlewares=grafana-whitelist'"
    net:
      - web
    pull_on_start: true
    username: 1000:1000
    volumes:
      - /srv/grafana:/var/lib/grafana
    require:
      - Class[docker]
      - File[/srv/grafana]
  renderer:
    image: grafana/grafana-image-renderer:2.0.0
    env:
      - ENABLE_METRICS=true
    expose:
      - 8081/tcp
    extra_parameters:
      - --restart=unless-stopped
    net:
      - web
    pull_on_start: true
    require:
      - Class[docker]
  portainer:
    image: portainer/portainer:latest
    dns:
      - 10.1.1.52
      - 10.1.1.53
    expose:
      - 9000/tcp
    extra_parameters:
      - --restart=unless-stopped
    labels:
      - "'traefik.enable=true'"
      - "'traefik.http.routers.portainer.rule=Host(`portainer.srv.gentoomaniac.net`)'"
      - "'traefik.http.routers.portainer.entrypoints=websecure'"
      - "'traefik.http.routers.portainer.tls=true'"
      - "'traefik.http.middlewares.portainer-whitelist.ipwhitelist.sourcerange=10.1.1.0/24,10.1.15.0/24'"
      - "'traefik.http.routers.portainer.middlewares=portainer-whitelist'"
    net:
      - web
    pull_on_start: true
    volumes:
      - /srv/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    require:
      - Class[docker]
      - File[/srv/portainer]
  radarr:
    image: linuxserver/radarr:latest
    dns:
      - 10.1.1.52
      - 10.1.1.53
    env:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - UMASK_SET=022
    expose:
      - 7878/tcp
    extra_parameters:
      - --restart=unless-stopped
    labels:
      - "'traefik.enable=true'"
      - "'traefik.http.routers.radarr.rule=Host(`radarr.srv.gentoomaniac.net`)'"
      - "'traefik.http.routers.radarr.entrypoints=websecure'"
      - "'traefik.http.routers.radarr.tls=true'"
      - "'traefik.http.middlewares.radarr-whitelist.ipwhitelist.sourcerange=10.1.1.0/24,10.1.15.0/24'"
      - "'traefik.http.routers.radarr.middlewares=radarr-whitelist'"
    net:
      - web
    pull_on_start: true
    volumes:
      - /srv/radarr:/config
      - nfs_movies:/movies
    require:
      - Class[docker]
      - File[/srv/radarr]
  radarr-kids:
    image: linuxserver/radarr:latest
    dns:
      - 10.1.1.52
      - 10.1.1.53
    env:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - UMASK_SET=022
    expose:
      - 7878/tcp
    extra_parameters:
      - --restart=unless-stopped
    labels:
      - "'traefik.enable=true'"
      - "'traefik.http.routers.radarr-kids.rule=Host(`radarr-kids.srv.gentoomaniac.net`)'"
      - "'traefik.http.routers.radarr-kids.entrypoints=websecure'"
      - "'traefik.http.routers.radarr-kids.tls=true'"
      - "'traefik.http.middlewares.radarr-kids-whitelist.ipwhitelist.sourcerange=10.1.1.0/24,10.1.15.0/24'"
      - "'traefik.http.routers.radarr-kids.middlewares=radarr-kids-whitelist'"
    net:
      - web
    pull_on_start: true
    volumes:
      - /srv/radarr-kids:/config
      - nfs_kids_movies:/kids_movies
    require:
      - Class[docker]
      - File[/srv/radarr-kids]
  registry:
    image: registry:2
    dns:
      - 10.1.1.52
      - 10.1.1.53
    env:
      - REGISTRY_HTTP_ADDR=0.0.0.0:80
    expose:
      - 80/tcp
    extra_parameters:
      - --restart=unless-stopped
    labels:
      - "'traefik.enable=true'"
      - "'traefik.http.routers.registry.rule=Host(`registry.srv.gentoomaniac.net`)'"
      - "'traefik.http.routers.registry.entrypoints=websecure'"
      - "'traefik.http.routers.registry.tls=true'"
      - "'traefik.http.middlewares.registry-whitelist.ipwhitelist.sourcerange=10.1.1.0/24,10.1.15.0/24'"
      - "'traefik.http.routers.registry.middlewares=registry-whitelist'"
    net:
      - web
    pull_on_start: true
    volumes:
      - /srv/registry:/var/lib/registry
    require:
      - Class[docker]
      - File[/srv/registry]
  sonarr:
    image: linuxserver/sonarr:latest
    dns:
      - 10.1.1.52
      - 10.1.1.53
    env:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - UMASK_SET=022
    expose:
      - 8989/tcp
    extra_parameters:
      - --restart=unless-stopped
    labels:
      - "'traefik.enable=true'"
      - "'traefik.http.routers.sonarr.rule=Host(`sonarr.srv.gentoomaniac.net`)'"
      - "'traefik.http.routers.sonarr.entrypoints=websecure'"
      - "'traefik.http.routers.sonarr.tls=true'"
      - "'traefik.http.middlewares.sonarr-whitelist.ipwhitelist.sourcerange=10.1.1.0/24,10.1.15.0/24'"
      - "'traefik.http.routers.sonarr.middlewares=sonarr-whitelist'"
    net:
      - web
    pull_on_start: true
    volumes:
      - /srv/sonarr:/config
      - nfs_shows:/shows
    require:
      - Class[docker]
      - File[/srv/sonarr]
  tautulli:
    image: linuxserver/tautulli:latest
    dns:
      - 10.1.1.52
      - 10.1.1.53
    expose:
      - 8181/tcp
    extra_parameters:
      - --restart=unless-stopped
    labels:
      - "'traefik.enable=true'"
      - "'traefik.http.routers.tautulli.rule=Host(`tautulli.srv.gentoomaniac.net`)'"
      - "'traefik.http.routers.tautulli.entrypoints=websecure'"
      - "'traefik.http.routers.tautulli.tls=true'"
      - "'traefik.http.middlewares.tautulli-whitelist.ipwhitelist.sourcerange=10.1.1.0/24,10.1.15.0/24'"
      - "'traefik.http.routers.tautulli.middlewares=tautulli-whitelist'"
    net:
      - web
    pull_on_start: true
    volumes:
      - /srv/tautulli:/config
    require:
      - Class[docker]
      - File[/srv/tautulli]
  plex:
    image: plexinc/pms-docker:latest
    dns:
      - 10.1.1.52
      - 10.1.1.53
    env:
      - PLEX_CLAIM="claim-McptpawppqGxrrc82qqd"
      - TZ="Europe/Berlin"
      - PLEX_GID=44
    labels:
      - "'traefik.enable=false'"
    ports:
      - 32400:32400/tcp
      - 1900:1900/udp
      - 3005:3005/tcp
      #- 5353:5353/udp
      - 8324:8324/tcp
      - 32410:32410/tcp
      - 32412-32414:32412-32414/udp
      - 32469:32469/tcp
    extra_parameters:
      - --restart=unless-stopped
    pull_on_start: true
    volumes:
      - /srv/plex/config:/config
      - /srv/plex/transcode:/transcode
      - nfs_movies:/data/movies:ro
      - nfs_shows:/data/shows:ro
      - nfs_kids_movies:/data/kids_movies:ro
      - nfs_kids_shows:/data/kids_shows:ro
      - nfs_kids_shows_se:/data/kids_shows_se:ro
      - nfs_sd_old:/data/sd_old:ro
    require:
      - Class[docker]
      - File[/srv/plex/config]
      - File[/srv/plex/transcode]
      - Docker_volume[nfs_movies]
      - Docker_volume[nfs_shows]
      - Docker_volume[nfs_kids_movies]
      - Docker_volume[nfs_kids_shows]
      - Docker_volume[nfs_kids_shows_se]
      - Docker_volume[nfs_sd_old]
      - Service[avahi-daemon]

kickstart_nginx::labels:
  - "'traefik.enable=true'"
  - "'traefik.http.routers.ksnginx.rule=Host(`ks.srv.gentoomaniac.net`)'"
  - "'traefik.http.routers.ksnginx.entrypoints=websecure'"
  - "'traefik.http.routers.ksnginx.tls=true'"
  - "'traefik.http.middlewares.ksnginx-whitelist.ipwhitelist.sourcerange=10.1.1.0/24,10.1.15.0/24'"
  - "'traefik.http.routers.ksnginx.middlewares=ksnginx-whitelist'"
